/**
 * generated by Xtext
 */
package dk.itu.mdd.configurator.generator;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Map;
import modelMDD2.Feature;
import modelMDD2.ModelMDD2Package;
import modelMDD2.impl.ModelImpl;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.emfjson.jackson.resource.JsonResourceFactory;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class ConfGenerator implements IGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    try {
      TreeIterator<EObject> _allContents = resource.getAllContents();
      EObject _head = IteratorExtensions.<EObject>head(_allContents);
      final ModelImpl e = ((ModelImpl) _head);
      Feature _root = e.getRoot();
      String _plus = ("Resource: " + _root);
      System.out.println(_plus);
      final ResourceSetImpl resourceSet = new ResourceSetImpl();
      Resource.Factory.Registry _resourceFactoryRegistry = resourceSet.getResourceFactoryRegistry();
      Map<String, Object> _extensionToFactoryMap = _resourceFactoryRegistry.getExtensionToFactoryMap();
      JsonResourceFactory _jsonResourceFactory = new JsonResourceFactory();
      _extensionToFactoryMap.put("*", _jsonResourceFactory);
      EPackage.Registry _packageRegistry = resourceSet.getPackageRegistry();
      _packageRegistry.put(ModelMDD2Package.eNS_URI, ModelMDD2Package.eINSTANCE);
      URI _createURI = URI.createURI("Configurator.json");
      final Resource res = resourceSet.createResource(_createURI);
      EList<EObject> _contents = res.getContents();
      _contents.add(e);
      Feature _root_1 = e.getRoot();
      String _name = _root_1.getName();
      String _plus_1 = ("/Users/cem2ran/Dropbox/UNI/ITU/2nd Semester/ModelDrivenDevelopment/runtime-EclipseApplication/TestConf/src-gen/" + _name);
      String _plus_2 = (_plus_1 + "Configurator.json");
      File _file = new File(_plus_2);
      FileOutputStream _fileOutputStream = new FileOutputStream(_file);
      res.save(_fileOutputStream, null);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
