buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.0.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "dk.itu.configurator"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/eclipse.inf'
        exclude 'about.mappings'
        exclude 'about.html'
        exclude 'about.ini'
        exclude 'about.properties'
        exclude 'plugin.properties'
        exclude 'modeling32.png'
        exclude 'plugin.xml'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    //compile 'co.trikita:anvil:0.0.6'
    compile 'org.emfjson:emfjson-jackson:0.10.0'
    compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.11.0-v20150123-0347'
    compile 'org.eclipse.emf:org.eclipse.emf.common:2.11.0-v20150123-0347'
    compile 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.11.0-v20150123-0347'
    compile project(':anvil')
}


String java8 = getJavaVersion(8)
String java7 = getJavaVersion(7)
retrolambda {
    jdk java8 //have tried with JAVA8_HOME
    oldJdk java7 //have tried with JAVA6_HOME
    javaVersion JavaVersion.VERSION_1_7 //have matched the above with VERSION_1_6
}

String getJavaVersion(Integer v) {
    def sout = new StringBuffer()
    def proc = "/usr/libexec/java_home -v 1.$v".execute()
    proc.consumeProcessOutput(sout, new StringBuffer())
    proc.waitForOrKill(1000)
    return sout.toString().replace("\n", "").replace("\r", "")
}